name: Release

on:
  push:
    tags:
      - '*'

env:
  GO_VERSION: '1.21'
  DOCKER_BUILDX_VERSION: 'v0.12.0'

jobs:
  build-and-release-artifacts:
    runs-on: ubuntu-22.04

    steps:
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: ${{ env.DOCKER_BUILDX_VERSION }}
          install: true
      
      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: us-docker.pkg.dev
          username: ${{ secrets.ARTIFACT_REGISTRY_USERNAME }}
          password: ${{ secrets.ARTIFACT_REGISTRY_PASSWORD }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Fetch History
        run: git fetch --prune --unshallow

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Find the Go Build Cache
        id: go
        run: echo "::set-output name=cache::$(make go.cachedir)"

      - name: Cache the Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go.outputs.cache }}
          key: ${{ runner.os }}-build-publish-artifacts-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-build-publish-artifacts-

      - name: Cache Go Dependencies
        uses: actions/cache@v2
        with:
          path: .work/pkg
          key: ${{ runner.os }}-pkg-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-pkg-

      - name: Vendor Dependencies
        run: make vendor vendor.check

      - name: Build Artifacts
        run: make -j2 build.all
        env:
          # We're using docker buildx, which doesn't actually load the images it
          # builds by default. Specifying --load does so.
          BUILD_ARGS: "--load"
          VERSION: ${{ github.ref_name }}

      - name: Publish Artifacts
        run: |
          set -euo pipefail
          curl -sL https://raw.githubusercontent.com/crossplane/crossplane/v1.13.2/install.sh | XP_VERSION=v1.13.2 sh
          sudo mv kubectl-crossplane /usr/local/bin
          make akuity-publish
        env:
          VERSION: ${{ github.ref_name }}
